
// This file will be auto-generated by Supabase CLI if you use it to generate types from your schema.
// For now, we'll define a basic structure.
// You should run `npx supabase gen types typescript --project-id your-project-id > src/types/supabase.ts`
// after setting up your tables in Supabase.

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      users: {
        Row: {
          id: string // UUID
          created_at?: string
          name: string | null
          email: string | null
          role: "user" | "admin" | null
          avatar_url: string | null // Supabase often uses snake_case for columns
        }
        Insert: {
          id?: string // UUID, defaults to gen_random_uuid()
          created_at?: string
          name?: string | null
          email?: string | null
          role?: "user" | "admin" | null
          avatar_url?: string | null
        }
        Update: {
          id?: string
          created_at?: string
          name?: string | null
          email?: string | null
          role?: "user" | "admin" | null
          avatar_url?: string | null
        }
        Relationships: []
      }
      // Define other tables here as you create them in Supabase
      // e.g., projects, news_articles, services, feedback, videos
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

// Example of how you might map your existing types to Supabase table rows, if needed
// This is more for reference as direct Supabase types (Database interface) are preferred.
import type { User as AppUser } from './index';

export type UserRow = Database['public']['Tables']['users']['Row'];

// Function to map Supabase UserRow to your application's User type (if column names differ etc.)
export function mapUserRowToAppUser(row: UserRow): AppUser {
  return {
    id: row.id,
    name: row.name,
    email: row.email,
    role: row.role,
    avatarUrl: row.avatar_url, // snake_case to camelCase
    created_at: row.created_at,
  };
}
